name: Release org.apache.htrace_htrace-core4_4.2.0-incubating

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Version to be released (e.g. 4.2.0-incubating.hazelcast-1).'
        required: true
      next-snapshot-version:
        description: 'Version to be set after the release (e.g. 4.2.0-incubating.hazelcast-2-SNAPSHOT).'
        required: true

env:
  GIT_AUTHOR_NAME: Flash Gordon
  GIT_AUTHOR_EMAIL: <>
  GIT_COMMITTER_NAME: Terminator the Kitty
  GIT_COMMITTER_EMAIL: <>
  PROJECT: org.apache.htrace_htrace-core4_4.2.0-incubating
jobs:
  do-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java and credentials
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'adopt'
          server-id: hazelcast-security
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: 'maven'

      - name: Do the Deployment and related stuff
        run: |
          cd "$PROJECT"
          mvn versions:set -B -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.release-version }}
          git commit -am "Release $PROJECT version ${{ github.event.inputs.release-version }}"
          git tag $PROJECT-v${{ github.event.inputs.release-version }}
          mvn clean install -B
          mvn deploy -B -Prelease -DskipTests
          mvn versions:set -B -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.next-snapshot-version }}
          git commit -am "Next $PROJECT version is ${{ github.event.inputs.next-snapshot-version }}"
          git push origin $PROJECT-v${{ github.event.inputs.release-version }} main
        env:
          MAVEN_USERNAME: ${{ secrets.JFROG_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
